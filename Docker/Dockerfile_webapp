# Dockerfile has to be executed in main iSpindel folder!
FROM node:14.20.0-alpine3.15 AS client_build
WORKDIR /client-app
COPY iSpindel.ClientApp .
RUN yarn install
RUN yarn build

# https://hub.docker.com/_/microsoft-dotnet
ARG BASE_IMAGE_ARCH=""
FROM mcr.microsoft.com/dotnet/aspnet:6.0-bullseye-slim$BASE_IMAGE_ARCH AS base
WORKDIR /ispindel
EXPOSE 80
EXPOSE 7000

# Dotnet is platform agnostic anyway so only the dotnet RUNTIME needs to be arm
FROM mcr.microsoft.com/dotnet/sdk:6.0-bullseye-slim-amd64 AS build
WORKDIR /app

# copy csproj and restore as distinct layers
COPY iSpindel.Shared iSpindel.Shared
COPY iSpindel.Database iSpindel.Database
COPY iSpindel.Database.Job iSpindel.Database.Job
COPY iSpindel.Server/Protos iSpindel.Server/Protos

COPY iSpindel.App/iSpindel.App.csproj iSpindel.App/iSpindel.App.csproj
ARG DOTNET_ARCH=x64
RUN dotnet restore "iSpindel.App/iSpindel.App.csproj" -r linux-$DOTNET_ARCH

# copy and publish app and libraries
COPY iSpindel.App iSpindel.App
WORKDIR "/app/iSpindel.App"
ARG DOTNET_ARCH=x64
RUN dotnet build "iSpindel.App.csproj" -c Release -r linux-$DOTNET_ARCH --no-restore

FROM build AS publish
ARG DOTNET_ARCH=x64
RUN  dotnet publish "iSpindel.App.csproj" --no-build --no-cache -c Release -r linux-$DOTNET_ARCH --no-self-contained -o /app/publish

# final stage/image
FROM base AS final
WORKDIR /ispindel
COPY --from=publish /app/publish .
COPY --from=client_build /client-app/dist /dist
ENTRYPOINT ["dotnet", "iSpindel.App.dll"]