# Dockerfile has to be executed in main iSpindel folder!
FROM node:16-bullseye-slim AS client_build
WORKDIR /client-app

# Workaround: Currently my yarn and angular is way too old and needs updating
# so it cannot be built inside a container. As this is a lot of work and I
# can still build on my machine, for the moment I just copy the build result 
# into the container

#RUN npm uninstall -g yarn
#RUN rm -rf "$HOME/.yarn"
#RUN npm install --global yarn@1.22.15 --force
#RUN ls -l .
#RUN yarn install --inline-builds
#RUN yarn build

COPY iSpindel.ClientApp/dist ./dist

# https://hub.docker.com/_/microsoft-dotnet
ARG BASE_IMAGE_ARCH=""
FROM mcr.microsoft.com/dotnet/aspnet:6.0-bullseye-slim$BASE_IMAGE_ARCH AS base
ARG DEBUG=0
WORKDIR /remote_debugger
RUN if [ "${DEBUG}" = "1" ];\
    then\
        echo "Installing Remote Debugger into Container"; \
        apt-get update; \
        apt-get install -y --no-install-recommends unzip curl;\
        rm -rf /var/lib/apt/lists;\
        curl -sSL https://aka.ms/getvsdbgsh --output install_vs_dbg.sh;\
        chmod +x install_vs_dbg.sh && ./install_vs_dbg.sh -v latest -l /remote_debugger;\
    fi 
EXPOSE 80
EXPOSE 7000

# Dotnet is platform agnostic anyway so only the dotnet RUNTIME needs to be arm
FROM mcr.microsoft.com/dotnet/sdk:6.0-bullseye-slim-amd64 AS build
WORKDIR /app

# copy csproj and restore as distinct layers
COPY iSpindel.Shared iSpindel.Shared
COPY iSpindel.Database iSpindel.Database
COPY iSpindel.Database.Job iSpindel.Database.Job
COPY iSpindel.Server/Protos iSpindel.Server/Protos

COPY iSpindel.App/iSpindel.App.csproj iSpindel.App/iSpindel.App.csproj
ARG DOTNET_ARCH=x64
RUN dotnet restore "iSpindel.App/iSpindel.App.csproj" -r linux-$DOTNET_ARCH

# copy and publish app and libraries
COPY iSpindel.App iSpindel.App
WORKDIR "/app/iSpindel.App"
ARG DOTNET_ARCH=x64
RUN dotnet build "iSpindel.App.csproj" -c Release -r linux-$DOTNET_ARCH --no-restore --no-self-contained

FROM build AS publish
ARG DOTNET_ARCH=x64
RUN  dotnet publish "iSpindel.App.csproj" --no-build --no-cache -c Release -r linux-$DOTNET_ARCH --no-self-contained -o /app/publish

# final stage/image
FROM base AS final
WORKDIR /ispindel
COPY --from=publish /app/publish .
COPY --from=client_build /client-app/dist /usr/share/dotnet/dist
ENTRYPOINT ["dotnet", "iSpindel.App.dll"]