// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using iSpindel.Database;

namespace iSpindel.Database.Migrations
{
    [DbContext(typeof(iSpindelContext))]
    [Migration("20200502215658_initial_data")]
    partial class initial_data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("iSpindel.Database.DataPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Battery")
                        .HasColumnType("double precision");

                    b.Property<int?>("DataSeriesId")
                        .HasColumnType("integer");

                    b.Property<double>("Gravity")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("RecordTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Temperature")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DataSeriesId");

                    b.ToTable("DataPoints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Battery = 100.0,
                            DataSeriesId = -1,
                            Gravity = 5.0,
                            RecordTime = new DateTime(2020, 5, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Temperature = 24.0
                        },
                        new
                        {
                            Id = 2,
                            Battery = 100.0,
                            DataSeriesId = -1,
                            Gravity = 5.0,
                            RecordTime = new DateTime(2020, 5, 1, 23, 5, 0, 0, DateTimeKind.Unspecified),
                            Temperature = 25.0
                        },
                        new
                        {
                            Id = 3,
                            Battery = 95.0,
                            DataSeriesId = -1,
                            Gravity = 7.0,
                            RecordTime = new DateTime(2020, 5, 1, 23, 10, 0, 0, DateTimeKind.Unspecified),
                            Temperature = 25.0
                        },
                        new
                        {
                            Id = 4,
                            Battery = 95.0,
                            DataSeriesId = -1,
                            Gravity = 7.0,
                            RecordTime = new DateTime(2020, 5, 1, 23, 15, 0, 0, DateTimeKind.Unspecified),
                            Temperature = 26.0
                        },
                        new
                        {
                            Id = 5,
                            Battery = 90.0,
                            DataSeriesId = -1,
                            Gravity = 9.0,
                            RecordTime = new DateTime(2020, 5, 1, 23, 20, 0, 0, DateTimeKind.Unspecified),
                            Temperature = 26.0
                        },
                        new
                        {
                            Id = 6,
                            Battery = 90.0,
                            DataSeriesId = -1,
                            Gravity = 9.0,
                            RecordTime = new DateTime(2020, 5, 1, 23, 25, 0, 0, DateTimeKind.Unspecified),
                            Temperature = 26.0
                        },
                        new
                        {
                            Id = 7,
                            Battery = 90.0,
                            DataSeriesId = -1,
                            Gravity = 15.0,
                            RecordTime = new DateTime(2020, 5, 1, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Temperature = 23.0
                        },
                        new
                        {
                            Id = 8,
                            Battery = 90.0,
                            DataSeriesId = -1,
                            Gravity = 15.0,
                            RecordTime = new DateTime(2020, 5, 1, 23, 35, 0, 0, DateTimeKind.Unspecified),
                            Temperature = 22.0
                        },
                        new
                        {
                            Id = 9,
                            Battery = 85.0,
                            DataSeriesId = -1,
                            Gravity = 25.0,
                            RecordTime = new DateTime(2020, 5, 1, 23, 40, 0, 0, DateTimeKind.Unspecified),
                            Temperature = 21.0
                        },
                        new
                        {
                            Id = 10,
                            Battery = 80.0,
                            DataSeriesId = -1,
                            Gravity = 25.0,
                            RecordTime = new DateTime(2020, 5, 1, 23, 45, 0, 0, DateTimeKind.Unspecified),
                            Temperature = 24.0
                        });
                });

            modelBuilder.Entity("iSpindel.Database.DataSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DataSeries");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Description = "This is the default Data Series for iSpindel Projects.",
                            Name = "Default Data Series"
                        });
                });

            modelBuilder.Entity("iSpindel.Database.DataPoint", b =>
                {
                    b.HasOne("iSpindel.Database.DataSeries", "DataSeries")
                        .WithMany("DataPoints")
                        .HasForeignKey("DataSeriesId");
                });
#pragma warning restore 612, 618
        }
    }
}
